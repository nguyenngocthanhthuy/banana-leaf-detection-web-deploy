services:

  authapi:
    container_name: authapi
    build: 
      context: ./authProject
      dockerfile: DockerfileAuth
    #["uwsgi", "--ini", "/authFolder/auth_uwsgi.ini"]
    command: >
      sh -c "python /authFolder/manage.py makemigrations && python /authFolder/manage.py migrate --no-input && python /authFolder/manage.py collectstatic --no-input && gunicorn authservice.wsgi:application --bind 0.0.0.0:8000"
    restart: always
    volumes:
      - authstatic:/authstatic
    ports:
      - "8000:8000"
    environment:
      - DJANGO_SETTINGS_MODULE=authservice.settings
      - POSTGRES_DB=userdb
      - POSTGRES_USER=user_root
      - POSTGRES_PASSWORD=root
    depends_on:
      - db
  
  db:
    image: postgres:14.3-alpine
    volumes:  
      - postgres_volume:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=userdb
      - POSTGRES_USER=user_root
      - POSTGRES_PASSWORD=root
      - POSTGRES_HOST_AUTH_METHOD=trust
  
  detectapi:
    container_name: detectapi
    build: 
      context: ./detectProject
      dockerfile: DockerfileDetect
    #["uwsgi", "--ini", "/detectFolder/detect_uwsgi.ini"]
    command: >
      sh -c "python /detectFolder/manage.py makemigrations && python /detectFolder/manage.py migrate --no-input && python /detectFolder/manage.py collectstatic --no-input && gunicorn detectservice.wsgi:application --bind 0.0.0.0:8001"
    restart: always
    volumes:
      - detectstatic:/detectstatic
    ports:
      - "8001:8001"
    
  frontendweb:
    container_name: frontendweb
    build:
      context: ./frontendProject
      dockerfile: DockerfileFrontend
    volumes:
      - react_volume:/frontendFolder/build
    ports:
      - 3000:3000
    command: npm start

  nginx:
    restart: always
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - authstatic:/authstatic
      - detectstatic:/detectstatic
      - react_volume:/frontendFolder/build
    ports:
      - "80:80"
    depends_on:
      - authapi
      - detectapi
      - frontendweb

volumes:
  postgres_volume:
  react_volume:
  authstatic:
  detectstatic:




